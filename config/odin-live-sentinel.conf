// demo configuration for live ODIN data resources
// NOTE - hit requires several valid settings in the user vault:
//    - [optional] adsb.{host,port} - if this is not set to a live ADS-B host there will be no tracks but satellites will still show
//    - spacetrack.authentication - this is a required identity/password HTTP query string to log in on space-track.org
//    - firms.map-key - this is a valid map key to access data via HTTP API on https://firms.modaps.eosdis.nasa.gov/
// live import of JPSS satellite data also requires a valid ../orekit-data ephemeris directory

name = "odin-live-sentinel"

cache.dir = "../cache"
adsb.host = "??adsb.host" // NOTE - if this is not set correctly there will be no tracking

jpss.region = [  // polygon of [lat,lon] pairs (western conus)
  [50.0, -125.0], [50.0, -104.0], [31.0, -104.0], [31.0, -117.0], [33.15, -119.616], [40.279, -124.69]
]

actors = [
  {
    name = "httpServer"
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "9000"
    //log-incoming = true

    ws-keep-alive = 30s

    routes = [
      { // name is used as default if request-prefix is not specified
        name = "odin"
        class = "gov.nasa.race.odin.LiveApp"
        access-token = "??cesium.access-token"

        resource-map = "../resources.txt" // only for development/debugging
        cesium-cache = ${cache.dir}"/cesium/current" // for cesium content
        cache-dir = ${cache.dir} // for general proxied requests
        request-render = true

        read-from = ["/flights", "/jpss", "/goesr", "/sentinel-out"]

        // JPSS (polar orbiting) satellite fire tracking
        jpss = {
          layer-name = "/fire/tracking/JPSS"
          description = "JPSS active fires"
          show = true

          satellites = [
            { sat-id = 43013, name = "J-1", description = "polar orbiting VIIRS satellite", show = true },
            { sat-id = 37849, name = "NPP", description = "polar orbiting VIIRS satellite", show = true }
          ]

          max-age = "7d" // how long until we purge hotspot
          grid-resolution = 0.0 // to match fire pixel positions over several overpasses (in degrees - 0 means no matching)
          time-steps = [
            { hours =  6, color = "#ff0000" },
            { hours = 12, color = "#d00000a0" },
            { hours = 24, color = "#a0202090" },
            { hours = 48, color = "#80404090" }
          ]
          temp = { threshold = 200, color = "#ffff00" }
          frp = { threshold = 10, color = "#000000" }
        }

        // GOES-R (geostationary satellites) fire detection
        goes-r = {
          satellites = [
            { sat-id = 43226, name = "G17", description = "GOES-West", show = true },
            { sat-id = 41866, name = "G16", description = "GOES-East", show = true }
          ]

          max-age = 3h // if pixel hasn not been updated in that time it is dropped
          max-history = 20 // we keep max 20 readings per pixel
          pixel-level = "all" // good, probable, all

          time-steps = [
            { hours =  6, color = "#ff0000" },
            { hours = 12, color = "#c00000" },
            { hours = 24, color = "#802020" },
            { hours = 48, color = "#804040" }
          ]
        }

        // ADS-B aircraft tracking
        track = {
          colors = ["/flights: cyan"]  // channel-key -> color map
          assets = ["model: generic_track.glb", "marker: triangle-point.png"] // sent as key list, referenced in serialized tracks
        }

        sentinel = {  // SentinelRoute config
          layer-name = "/fire/detection/Sentinel"
          dir = "tmp/delphire"
        }

        eye = {
          lon = -121.3276
          lat = 39.2369
          alt = 920000
        }
      }
    ]
  },

  //{
  //  name = "trackImporter"
  //  class = ".air.actor.SbsImportActor"
  //  write-to = "/flights"
  //  host = ${adsb.host} // read host from vault
  //  optional = true // in case there is no ADS-B host
  //  drop-after = "20 seconds"    // if set, check for dropped flights
  //},

  {
    name = "goesWestImporter"
    class = ".earth.actor.GoesRImportActor"
    write-to = "/goesr"

    polling-interval = 5m

    satellite = 43226 // G17
    data-dir = "tmp/goes17"
    keep-files = false // delete files after processing (data set is ~400kB and mostly empty)
    s3-region = "us-east-1"

    products = [
      { name = "ABI-L2-FDCC" // ABI L2 Fire (Hot Spot Characterization)
        bucket = "noaa-goes17"
        history = "1d"
        reader = { class = ".earth.AbiHotspotReader" }
      }
      // others to follow (lighting, aerosols, derived motion winds etc)
    ]
  },

  {
    name = "goesEastImporter"
    class = ".earth.actor.GoesRImportActor"
    write-to = "/goesr"

    polling-interval = 5m

    satellite = 41866 // G16
    data-dir = "tmp/goes16"
    keep-files = false // delete files after processing (data set is ~400kB and mostly empty)
    s3-region = "us-east-1"

    products = [
      { name = "ABI-L2-FDCC" // ABI L2 Fire (Hot Spot Characterization)
        bucket = "noaa-goes16"
        history = "1d"
        reader = { class = ".earth.AbiHotspotReader" }
      }
      // others to follow (lighting, aerosols, derived motion winds etc)
    ]
  },

  {
    name = "noaa20Importer"
    class = ".earth.actor.JpssImportActor"

    write-to = "/jpss"
    tle-from = "/tleRequest"

    map-key = "??firms.map-key"

    satellite = 43013  // NORAD CAT ID (NOAA-20)
    source = "VIIRS_NOAA20_NRT"
    region = ${jpss.region}
    history = 5d
    request-delay = [ 5m, 2h ] // from overpass time
  },

  {
    name = "nppImporter"
    class = ".earth.actor.JpssImportActor"

    write-to = "/jpss"
    tle-from = "/tleRequest"

    map-key = "??firms.map-key"

    satellite = 37849  // NORAD CAT ID (SNPP)
    source = "VIIRS_SNPP_NRT"
    region = ${jpss.region}
    history = 5d
    request-delay = [ 5m, 2h ] // from overpass time
  },

  {
    name = "tleImporter"
    class = ".space.TleImportActor"
    read-from = "/tleRequest"

    auth = "??spacetrack.authentication"
    max-connecting-timeout = 20s // space-track.org can be slow
    preload = [ { sat = 43013 } ]
  },

  {
    name = "sentinelImporter"
    class = ".odin.sentinel.SentinelImportActor"
    write-to = "/sentinel-in"
  },

  {
    name = "sentinelUpdater"
    class = ".odin.sentinel.SentinelUpdateActor"
    read-from = "/sentinel-in"
    write-to = "/sentinel-out"

    sentinel-dir = "tmp/delphire"
    store-sentinels = false
  },
]

include classpath("config/http-race.conf")
include classpath("config/logging-race.conf")

