// example config for ODIN demo app replaying archived data from 'race-data' repository (see README.md or
// https://github.com/NASARace/race-data for instructions of how to download)

name = "odin-czu-demo"

start-time = "2020-08-22T13:13:00PST"

// override with -Ddata.dir=... from command line to run other archived data
data.dir = "../race-data/odin-czu-081620"

archive-sbs = ${data.dir}"/sbs-08222020-131300.csv.gz"

archive-gps-crew1 = ${data.dir}"/crew1-08222020-131300.csv.gz"
archive-gps-crew2 = ${data.dir}"/crew2-08222020-131300.csv.gz"

archive-sentinel = ${data.dir}"/sentinel-08222020-131300.ta"

archive-g17 = ${data.dir}"/OR_ABI-L2-FDCC-G17_s20200816-050412_e20200823-055910.csv.gz"
archive-g16 = ${data.dir}"/OR_ABI-L2-FDCC-G16_s20200816-100421_e20200824-000001.csv.gz"

archive-noaa20 = ${data.dir}"/fire_nrt_J1V-C2_271847.csv.gz"
archive-noaa20-tle = ${data.dir}"/space-track/noaa20-081620-083120.3le"

archive-snpp = ${data.dir}"/fire_archive_SV-C2_271848.csv.gz"
archive-snpp-tle = ${data.dir}"/space-track/npp-081620-083120.3le"

archive-modis = ${data.dir}"/fire_archive_M-C61_271846.csv.gz"
archive-aqua-tle = ${data.dir}"/space-track/aqua-081620-083120.3le"
archive-terra-tle = ${data.dir}"/space-track/terra-081620-083120.3le"

archive-hrrr = ${data.dir}"/hrrr"

firehistory.dir = "../race-data/fires"

executable-paths = "../race-executables"

jpss.region = [  // for overpasses, polygon of [lat,lon] pairs (western conus)
  [50.0, -125.0], [50.0, -104.0], [31.0, -104.0], [31.0, -117.0], [33.15, -122.0], [40.279, -126.0]
]

wind.dir = ${data.dir}

landfire.dir = "../race-data/landfire"
mtbs.dir = "../race-data/mtbs"
hifld.dir = "../race-data/hifld" // public infrastructure data from https://hifld-geoplatform.opendata.arcgis.com/
ah.dir = "../race-data/ah"  // sample community infrastructure data

start-time = "2020-08-22T13:13:00PST"

// NOTE - this is used to cache map data and hence can get big. Clean up manually
cache.dir = "../cache"

actors = [
  {
    name = "httpServer"
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "9000"
    //log-incoming = true

    ws-keep-alive = 30s

    routes = [
      { // name is used as default if request-prefix is not specified
        name = "odin"
        class = "gov.nasa.race.odin.DemoApp"
        access-token = "??cesium.access-token" // not required for this demo

        read-from = ["/sbs", "/gps", "/sim", "/sentinel", "/goes-r", "/jpss", "/windninja"]

        cache-dir = ${cache.dir} // for general proxied requests
        request-render = true

        ui-themes = [
          { name="dark", path="ui_theme_dark.css"},
          { name="day", path="ui_theme_day.css"},
          { name="night", path="ui_theme_night.css"}
        ]

        terrain = {
          class = ".cesium.ArcGisTiledElevationTerrainProvider"
          proxy = true
        }

        channel-map = ["/sbs: ads-b", "/sim: drone", "/gps: ground"]

        sentinel = {  // SentinelRoute config
          name = "sentinel"
          cat = "/fire/detection"
          dir = ${data.dir}"/sentinel-data"
          image-dir = ${data.dir}"/sentinel-data/images"
        }

        imglayer = {
          sources = [
            //--- maps
            {
              pathname = "globe/natgeo"
              info = "ArcGIS NatGeo Terrain"
              exclusive = ["globe"]
              provider = {
                class = ".cesium.ArcGisMapServerImageryProvider"
                url = "https://services.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/"
              }
              proxy = true
              show = true
              render { brightness = 0.6 }
            },
            {
              pathname = "globe/bing-aerial",
              info = "Bing aerial default",
              exclusive = ["globe"]
              render = { // don't change rendering of truecolor imagery
                brightness = 1.0
                contrast = 1.0
                hue = 0.0
              }
            },
            {
              pathname = "globe/stamen-terrain"
              info = "Stamen Terrain"
              provider = {
                class = ".cesium.OpenStreetMapImageryProvider"
                url = "http://tile.stamen.com/terrain/"
              }
              exclusive = ["globe"]
              proxy = true
              //show = true
              render { brightness = 0.6 }
            },

            //--- landfire
            {
              pathname = "landfire/fuel/cover",
              info = "landfire fuel vegetation cover (FVC 220)",
              provider = {
                class = ".cesium.WebMapServiceImageryProvider"
                url = "https://edcintl.cr.usgs.gov/geoserver/landfire/us_220/ows",
                // WMS options
                layers = "LC22_FVC_220"
                parameters = "format=image/png"
              }
              exclusive = ["lf"]
              color-map = ${landfire.dir}"/LF20_FVC_220.json"
              render = { alpha-color = "white" }
              proxy = true
            },
            {
              pathname = "landfire/fuel/type",
              info = "landfire fuel vegetation type (FVT 220)",
              provider = {
                class = ".cesium.WebMapServiceImageryProvider"
                url = "https://edcintl.cr.usgs.gov/geoserver/landfire/us_220/ows",
                // WMS options
                layers = "LC22_FVT_220"
                parameters = "format=image/png"
              }
              exclusive = ["lf"]
              color-map = ${landfire.dir}"/LF20_FVT_220.json"
              render = { alpha-color = "white" }
              proxy = true
            },
            {
              pathname = "landfire/fuel/disturbance"
              info = "landfire fuel disturbance (FDst 220)",
              provider = {
                class = ".cesium.WebMapServiceImageryProvider"
                url = "https://edcintl.cr.usgs.gov/geoserver/landfire/us_other/ows"
                // WMS options
                layers = "LC22_FDst_220"
                parameters = "format=image/png"
              }
              exclusive = ["lf"]
              color-map = ${landfire.dir}"/LF20_FDst_220.json"
              render = { alpha-color = "black", alpha-color-threshold = 0.1 }
              //proxy = true
            },

            //--- mtbs
            {
              pathname = "mtbs/burn_severity/2020"
              info = "Monitoring Trends in Burn Severity CONUS 2020",
              provider = {
                class = ".cesium.WebMapServiceImageryProvider"
                url = "https://apps.fs.usda.gov/arcx/services/RDW_Wildfire/MTBS_CONUS/MapServer/WMSServer"
                // WMS options
                layers = "36"
              }
              exclusive = ["lf"]
              color-map = ${mtbs.dir}"/burn-severity-conus-2020.json"
              render = { alpha-color = "white", alpha-color-threshold = 0.1 }
              proxy = true
            },
            {
              pathname = "mtbs/boundaries/1984-2020"
              info = "Burned Area Boundaries CONUS 1984-2020",
              provider = {
                class = ".cesium.WebMapServiceImageryProvider"
                url = "https://apps.fs.usda.gov/arcx/services/EDW/EDW_MTBS_01/MapServer/WMSServer"
                // WMS options
                layers = "0"

              }
              //exclusive = ["lf"]
              render = {hue = 218, saturation = 1.5, alpha-color = "white", alpha-color-threshold = 0.1}
              proxy = true
            }
          ]

          render = {
            alpha: 1.0
            brightness: 1.0
            contrast: 1.0
            hue: 0.0
            saturation: 1.0
            gamma: 1.0
          }
        }

        geolayer = {
          sources = [
            { pathname="utilities/powerlines/ca"
              file=${hifld.dir}"/Electric_Power_Transmission_Lines-CA-100122.geojson"
              info="""<a target=\"_blank\" href=\"https://hifld-geoplatform.opendata.arcgis.com/datasets/electric-power-transmission-lines/explore?location=37.235258%2C-120.490264%2C6.86\">HIFLD Electric Power Transmission Lines in CA 10/01/2022</a>"""
              render = { stroke-width = 1.5 }
            },
            { pathname = "utilities/substations/ca"
              file=${hifld.dir}"/Electric_Substations-CA-100122.geojson"
              info="""HIFLD electric substations in CA 10/01/2022"""
              render = { marker-symbol = "s" }
            },
            { pathname = "comm/cell_towers/ca"
              file=${hifld.dir}"/CellularTowers-CA100122.geojson"
              info="""HIFLD cell towers in CA 10/01/2022"""
              render = { marker-symbol = "c" }
            },
            { pathname = "comm/radio_towers/ca"
              file=${hifld.dir}"/FM__Transmission__Towers-CA-100122.geojson"
              info="""HIFLD FM radio towers in CA 10/01/2022"""
              render = { marker-symbol = "r" }
            },
            { pathname = "emergency/fire_stations/ca"
              file=${hifld.dir}"/Fire_Stations-CA-100122.geojson.gz"
              info="""HIFLD fire stations in CA 10/01/2022"""
              render = { marker-symbol = "geolayer-asset/firestation.png", marker-color = "red" } // requires extsym.js module
            },
            { pathname = "community/buildings"
              file=${ah.dir}"/ah-buildings.geojson"
              info="""sample Aldercroft Heights Buildings 10/16/2022"""
              render = { marker-symbol = "i", marker-color = "yellow", stroke-color = "yellow", fill-color = "orange" }
            },
            { pathname = "community/roads"
              file=${ah.dir}"/ah-roads.geojson"
              info="""sample Aldercroft Heights access/escape routes 10/16/2022"""
              render = { marker-symbol = "geolayer-asset/warning.png", marker-color = "red", stroke-color = "red", module="road.js" }
            },
            { pathname = "boundaries/counties/CA"
              file=${hifld.dir}/"CA_County_Boundaries.geojson"
              info="California county boundaries"
              render = { stroke-color = "red", stroke-width = 3, fill-color = "#ff000000", module="county_boundaries.js" }
            }
          ]

          render = { // default render parameters
            stroke-color = "#48D1CC"
            stroke-width = 2
            fill-color = "#48D1CC"
            marker-color = "#48D1CC"
            marker-size = 32
            module = "extsym.js"
          }
        }

        firehistory = {
          directory = ${firehistory.dir}
          perimeter-render = {
            stroke-width = 1.5,
            stroke-color = "orange",
            fill-color = "#f00000",
            fill-opacity = 0.6,
            dim-factor = 0.8
          }
        }

        track = {
          colors = ["ads-b: yellow", "drone: cyan", "ground: red"]
          assets = ["model: generic_track.glb", "marker: triangle-point.png"] // sent as key list, referenced in serialized tracks
        }

        goes-r = {
          satellites = [
            { sat-id = 43226, name = "G17", description = "GOES-West", show = true },
            { sat-id = 41866, name = "G16", description = "GOES-East", show = false }
          ]

          max-age = 7d // if pixel hasn not been updated in that time it is dropped
          max-history = 200 // we keep max 20 readings per pixel
          pixel-level = "all" // good, probable, all
          follow-latest = false
          lock-step = true

          time-steps = [
            { hours =  6, color = "#ff0000" },
            { hours = 12, color = "#c00000" },
            { hours = 24, color = "#802020" },
            { hours = 48, color = "#804040" }
          ]
        }

        jpss = {
          layer-name = "/fire/tracking/JPSS"
          description = "JPSS active fires"
          show = true

          satellites = [
            { sat-id = 43013, name = "J-1", description = "polar orbiting VIIRS satellite", show = true },
            { sat-id = 37849, name = "NPP", description = "polar orbiting VIIRS satellite", show = true },
            { sat-id = 27424, name = "Aqua", description = "polar orbiting MODIS satellite", show = false },
            { sat-id = 25994, name = "Terra", description = "polar orbiting MODIS satellite", show = false }
          ]

          max-age = "7d" // how long until we purge hotspot
          grid-resolution = 0.0 // to match fire pixel positions over several overpasses (in degrees - 0 means no matching)
          time-steps = [
            { hours =  6, color = "#ff0000" },
            { hours = 12, color = "#d00000a0" },
            { hours = 24, color = "#a0202090" },
            { hours = 48, color = "#80404090" }
          ]
          bright = { threshold = 200, color = "#ffff00" }
          frp = { threshold = 10, color = "#000000" }
        }

        windlayer = {
          vector.render = {
            point-size = 4.0
            width = 1.5
            color = "blue"
          }
          anim.render = {
            particles-texture-size = 64
            fade-opacity = 0.99
            line-width = 1.5
            color = "yellow"
            speed-factor = 0.2
          }
          contour.render = {
            stroke-color = "hotpink"
            stroke-width = 2.0
            fill-color = [ "#f0000000", "#f0000040", "#f0000060", "#f0000080", "#f00000a0" ]
          }
        }

        camera-positions = [
          { name: "Bay Area", lat: 38.1591, lon: -122.678, alt: 779589 }
          { name: "Peninsula", lat: 37.2302, lon: -122.1993, alt: 58887 }
          { name: "CZU", lat: 37.137, lon: -122.2854, alt: 49476 },
          { name: "Holy City", lat: 37.1622, lon: -121.9831, alt: 2737 },
          { name: "space", lat: 37.3254, lon: -127.7108, alt: 11229395 }
        ]
      }
    ]
  },

  {
    name = "simulator"
    class = ".air.actor.SimpleAircraft"
    tick-interval = 5s
    write-to = "/sim"

    id = "557902201"
    cs = "XY333"
    lat = 37.246822
    lon = -121.9770277
    altitude-ft = 1000
    heading = 0
    speed-kn = 100.0
  },

  { name = "gps1Replay"
    class = ".earth.actor.GpsPosReplayActor"
    write-to = "/gps"

    //can-reset-clock = true

    pathname = ${archive-gps-crew1}
    buffer-size = 4096
  },

  { name = "gps2Replay"
    class = ".earth.actor.GpsPosReplayActor"
    write-to = "/gps"

    //can-reset-clock = true

    pathname = ${archive-gps-crew2}
    buffer-size = 4096
  },

  {
    name = "sbsReplay"
    class = ".air.actor.SbsReplayActor"
    write-to = "/sbs"

    //can-reset-clock = true
    default-zone = "US/Pacific" // dump1090 records in local time without zone id
    drop-after = "15 seconds"    // if set, check for dropped flights

    pathname = ${archive-sbs}
    buffer-size = 32768
  },

  { name = "sentinelReplay"
    class = ".odin.sentinel.SentinelReplayActor"
    write-to = "/sentinel-in"

    pathname = ${archive-sentinel}
    flatten = true
    buffer-size = 4096
  },

  {
    name = "sentinelUpdater"
    class = ".odin.sentinel.SentinelUpdateActor"
    read-from = "/sentinel-in"
    write-to = "/sentinel"

    sentinel-dir = ${data.dir}"/sentinel-data"
    store-sentinels = false
  },

  {
    name = "goesWestReplayer"
    class = ".earth.actor.GoesrHotspotReplayActor"
    write-to = "/goes-r"

    pathname = ${archive-g17}
    buffer-size = 32768

    satellite = 43226
    history = 3d
  },

  {
    name = "goesEastReplayer"
    class = ".earth.actor.GoesrHotspotReplayActor"
    write-to = "/goes-r"

    pathname = ${archive-g16}
    buffer-size = 32768

    satellite = 41866
    history = 3d
  },

  { name = "noaa20Replayer"
    class = ".earth.actor.JpssReplayActor"
    write-to = "/jpss"

    pathname = ${archive-noaa20}
    tle-archive = ${archive-noaa20-tle}

    satellite = 43013  // NORAD CAT ID (NOAA-20)
    source = "VIIRS_NOAA20_NRT"
    region = ${jpss.region}
    history = 6d

    //bounds { // optional server side sub-filter: Bay Area
    //  nw = { lat = 37.7, lon = -122.7 }
    //  se = { lat = 36.9, lon = -121.059 }
    //}
  },

  { name = "nppReplayer"
    class = ".earth.actor.JpssReplayActor"
    write-to = "/jpss"

    pathname = ${archive-snpp}
    tle-archive = ${archive-snpp-tle}

    satellite = 37849  // NORAD CAT ID (NPP)
    source = "VIIRS_SV_NRT"
    region = ${jpss.region}
    history = 6d
  },

//  { name = "modisReplayer"
//    class = ".earth.actor.ModisReplayActor"
//    write-to = "/jpss"
//
//    pathname = ${archive-modis}
//    tle-archive = [
//      ${archive-aqua-tle},
//      ${archive-terra-tle}
//    ]
//
//    satellite = 25994  // FIXME - this is useless here
//    source = "MODIS"
//    region = ${jpss.region}
//    history = 6d
//  },

  { name = "hrrReplay"
    class = ".earth.actor.HrrrReplayActor"
    write-to = "/hrrr"

    directory = ${archive-hrrr}
    max-age = 3d

    hrrr-type = "tuvc"
    area = "west"
    bounds = {
      nw = { lat = 50, lon = -124 }
      se = { lat = 23, lon = -104 }
    }
  },

  { name = "windninjaExecutor"
    class = ".earth.actor.WindNinjaActor"

    read-from = "/hrrr"
    write-to = "/windninja"

    areas = [
      {
        name = "czu"
        bounds = {
          nw = {lat = 37.4842722, lon = -122.6799806}
          se = {lat = 36.9947389, lon = -121.8616750}
        }
        dem-file = ${data.dir}"/czu_utm.tif"
        vegetation-type = "trees"
        mesh-resolution = 250m
      }
    ]
  }

//  { name = "probe"
//    class = ".actor.ProbeActor"
//    read-from = "/sentinel"
//  }
]

include classpath("config/http-race.conf")
include classpath("config/logging-race.conf")
